// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package grpcSkill

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Skill struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Endpoint             string   `protobuf:"bytes,2,opt,name=Endpoint,proto3" json:"Endpoint,omitempty"`
	AccessLevel          int32    `protobuf:"varint,3,opt,name=AccessLevel,proto3" json:"AccessLevel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Skill) Reset()         { *m = Skill{} }
func (m *Skill) String() string { return proto.CompactTextString(m) }
func (*Skill) ProtoMessage()    {}
func (*Skill) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Skill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Skill.Unmarshal(m, b)
}
func (m *Skill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Skill.Marshal(b, m, deterministic)
}
func (m *Skill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Skill.Merge(m, src)
}
func (m *Skill) XXX_Size() int {
	return xxx_messageInfo_Skill.Size(m)
}
func (m *Skill) XXX_DiscardUnknown() {
	xxx_messageInfo_Skill.DiscardUnknown(m)
}

var xxx_messageInfo_Skill proto.InternalMessageInfo

func (m *Skill) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Skill) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Skill) GetAccessLevel() int32 {
	if m != nil {
		return m.AccessLevel
	}
	return 0
}

type QueryRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Statement            string   `protobuf:"bytes,2,opt,name=Statement,proto3" json:"Statement,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *QueryRequest) GetStatement() string {
	if m != nil {
		return m.Statement
	}
	return ""
}

type SuccessResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuccessResponse) Reset()         { *m = SuccessResponse{} }
func (m *SuccessResponse) String() string { return proto.CompactTextString(m) }
func (*SuccessResponse) ProtoMessage()    {}
func (*SuccessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *SuccessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuccessResponse.Unmarshal(m, b)
}
func (m *SuccessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuccessResponse.Marshal(b, m, deterministic)
}
func (m *SuccessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuccessResponse.Merge(m, src)
}
func (m *SuccessResponse) XXX_Size() int {
	return xxx_messageInfo_SuccessResponse.Size(m)
}
func (m *SuccessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SuccessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SuccessResponse proto.InternalMessageInfo

func (m *SuccessResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Skill)(nil), "grpcSkill.Skill")
	proto.RegisterType((*QueryRequest)(nil), "grpcSkill.QueryRequest")
	proto.RegisterType((*SuccessResponse)(nil), "grpcSkill.SuccessResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4c, 0x2f, 0x2a, 0x48, 0x0e,
	0xce, 0xce, 0xcc, 0xc9, 0x51, 0x0a, 0xe5, 0x62, 0x05, 0x33, 0x84, 0xf8, 0xb8, 0x98, 0x3c, 0x5d,
	0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x98, 0x3c, 0x5d, 0x84, 0xa4, 0xb8, 0x38, 0x5c, 0xf3,
	0x52, 0x0a, 0xf2, 0x33, 0xf3, 0x4a, 0x24, 0x98, 0xc0, 0xa2, 0x70, 0xbe, 0x90, 0x02, 0x17, 0xb7,
	0x63, 0x72, 0x72, 0x6a, 0x71, 0xb1, 0x4f, 0x6a, 0x59, 0x6a, 0x8e, 0x04, 0xb3, 0x02, 0xa3, 0x06,
	0x6b, 0x10, 0xb2, 0x90, 0x92, 0x0d, 0x17, 0x4f, 0x60, 0x69, 0x6a, 0x51, 0x65, 0x50, 0x6a, 0x61,
	0x69, 0x6a, 0x71, 0x09, 0x86, 0xe9, 0x32, 0x5c, 0x9c, 0xc1, 0x25, 0x89, 0x25, 0xa9, 0xb9, 0xa9,
	0x70, 0xe3, 0x11, 0x02, 0x4a, 0xda, 0x5c, 0xfc, 0xc1, 0xa5, 0x60, 0xd3, 0x82, 0x52, 0x8b, 0x0b,
	0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x24, 0xb8, 0xd8, 0xa1, 0x42, 0x60, 0x53, 0x38, 0x82, 0x60, 0x5c,
	0xa3, 0x66, 0x26, 0x2e, 0x84, 0x7f, 0x84, 0x6c, 0xb9, 0xb8, 0x93, 0x8b, 0x52, 0x13, 0x4b, 0x52,
	0x21, 0x5c, 0x01, 0x3d, 0xb8, 0x94, 0x1e, 0x98, 0x94, 0x92, 0x42, 0x16, 0x41, 0xb5, 0x44, 0x89,
	0x01, 0xa4, 0x3d, 0x25, 0x35, 0x27, 0x95, 0x02, 0xed, 0xa5, 0x05, 0x29, 0x64, 0xdb, 0x6e, 0xc9,
	0xc5, 0x55, 0x08, 0x0a, 0x35, 0x88, 0x6e, 0x71, 0x24, 0xb5, 0xc8, 0x81, 0x29, 0x85, 0x61, 0xac,
	0x12, 0x43, 0x12, 0x1b, 0x38, 0x66, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x08, 0x8e, 0x1f,
	0xce, 0xea, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcSkillClient is the client API for GrpcSkill service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcSkillClient interface {
	CreateSkill(ctx context.Context, in *Skill, opts ...grpc.CallOption) (*SuccessResponse, error)
	DeleteSkill(ctx context.Context, in *Skill, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateSkill(ctx context.Context, in *Skill, opts ...grpc.CallOption) (*SuccessResponse, error)
	QuerySkill(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*Skill, error)
}

type grpcSkillClient struct {
	cc *grpc.ClientConn
}

func NewGrpcSkillClient(cc *grpc.ClientConn) GrpcSkillClient {
	return &grpcSkillClient{cc}
}

func (c *grpcSkillClient) CreateSkill(ctx context.Context, in *Skill, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/grpcSkill.grpcSkill/createSkill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcSkillClient) DeleteSkill(ctx context.Context, in *Skill, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/grpcSkill.grpcSkill/deleteSkill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcSkillClient) UpdateSkill(ctx context.Context, in *Skill, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/grpcSkill.grpcSkill/updateSkill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcSkillClient) QuerySkill(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*Skill, error) {
	out := new(Skill)
	err := c.cc.Invoke(ctx, "/grpcSkill.grpcSkill/querySkill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcSkillServer is the server API for GrpcSkill service.
type GrpcSkillServer interface {
	CreateSkill(context.Context, *Skill) (*SuccessResponse, error)
	DeleteSkill(context.Context, *Skill) (*SuccessResponse, error)
	UpdateSkill(context.Context, *Skill) (*SuccessResponse, error)
	QuerySkill(context.Context, *QueryRequest) (*Skill, error)
}

// UnimplementedGrpcSkillServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcSkillServer struct {
}

func (*UnimplementedGrpcSkillServer) CreateSkill(ctx context.Context, req *Skill) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSkill not implemented")
}
func (*UnimplementedGrpcSkillServer) DeleteSkill(ctx context.Context, req *Skill) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSkill not implemented")
}
func (*UnimplementedGrpcSkillServer) UpdateSkill(ctx context.Context, req *Skill) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSkill not implemented")
}
func (*UnimplementedGrpcSkillServer) QuerySkill(ctx context.Context, req *QueryRequest) (*Skill, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuerySkill not implemented")
}

func RegisterGrpcSkillServer(s *grpc.Server, srv GrpcSkillServer) {
	s.RegisterService(&_GrpcSkill_serviceDesc, srv)
}

func _GrpcSkill_CreateSkill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Skill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcSkillServer).CreateSkill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcSkill.grpcSkill/CreateSkill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcSkillServer).CreateSkill(ctx, req.(*Skill))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcSkill_DeleteSkill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Skill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcSkillServer).DeleteSkill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcSkill.grpcSkill/DeleteSkill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcSkillServer).DeleteSkill(ctx, req.(*Skill))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcSkill_UpdateSkill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Skill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcSkillServer).UpdateSkill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcSkill.grpcSkill/UpdateSkill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcSkillServer).UpdateSkill(ctx, req.(*Skill))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcSkill_QuerySkill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcSkillServer).QuerySkill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcSkill.grpcSkill/QuerySkill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcSkillServer).QuerySkill(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcSkill_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcSkill.grpcSkill",
	HandlerType: (*GrpcSkillServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createSkill",
			Handler:    _GrpcSkill_CreateSkill_Handler,
		},
		{
			MethodName: "deleteSkill",
			Handler:    _GrpcSkill_DeleteSkill_Handler,
		},
		{
			MethodName: "updateSkill",
			Handler:    _GrpcSkill_UpdateSkill_Handler,
		},
		{
			MethodName: "querySkill",
			Handler:    _GrpcSkill_QuerySkill_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
