// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package grpcSkill

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SkillDeterminationResponse struct {
	Accuracy             float32  `protobuf:"fixed32,1,opt,name=Accuracy,proto3" json:"Accuracy,omitempty"`
	Duration             float32  `protobuf:"fixed32,2,opt,name=Duration,proto3" json:"Duration,omitempty"`
	FowardAddress        string   `protobuf:"bytes,3,opt,name=FowardAddress,proto3" json:"FowardAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SkillDeterminationResponse) Reset()         { *m = SkillDeterminationResponse{} }
func (m *SkillDeterminationResponse) String() string { return proto.CompactTextString(m) }
func (*SkillDeterminationResponse) ProtoMessage()    {}
func (*SkillDeterminationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *SkillDeterminationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkillDeterminationResponse.Unmarshal(m, b)
}
func (m *SkillDeterminationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkillDeterminationResponse.Marshal(b, m, deterministic)
}
func (m *SkillDeterminationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkillDeterminationResponse.Merge(m, src)
}
func (m *SkillDeterminationResponse) XXX_Size() int {
	return xxx_messageInfo_SkillDeterminationResponse.Size(m)
}
func (m *SkillDeterminationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SkillDeterminationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SkillDeterminationResponse proto.InternalMessageInfo

func (m *SkillDeterminationResponse) GetAccuracy() float32 {
	if m != nil {
		return m.Accuracy
	}
	return 0
}

func (m *SkillDeterminationResponse) GetDuration() float32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *SkillDeterminationResponse) GetFowardAddress() string {
	if m != nil {
		return m.FowardAddress
	}
	return ""
}

type SkillDeterminationRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SkillDeterminationRequest) Reset()         { *m = SkillDeterminationRequest{} }
func (m *SkillDeterminationRequest) String() string { return proto.CompactTextString(m) }
func (*SkillDeterminationRequest) ProtoMessage()    {}
func (*SkillDeterminationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *SkillDeterminationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkillDeterminationRequest.Unmarshal(m, b)
}
func (m *SkillDeterminationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkillDeterminationRequest.Marshal(b, m, deterministic)
}
func (m *SkillDeterminationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkillDeterminationRequest.Merge(m, src)
}
func (m *SkillDeterminationRequest) XXX_Size() int {
	return xxx_messageInfo_SkillDeterminationRequest.Size(m)
}
func (m *SkillDeterminationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SkillDeterminationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SkillDeterminationRequest proto.InternalMessageInfo

func (m *SkillDeterminationRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*SkillDeterminationResponse)(nil), "grpcSkill.SkillDeterminationResponse")
	proto.RegisterType((*SkillDeterminationRequest)(nil), "grpcSkill.SkillDeterminationRequest")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4c, 0x2f, 0x2a, 0x48, 0x0e,
	0xce, 0xce, 0xcc, 0xc9, 0x51, 0xaa, 0xe2, 0x92, 0x02, 0x33, 0x5c, 0x52, 0x4b, 0x52, 0x8b, 0x72,
	0x33, 0xf3, 0x12, 0x4b, 0x32, 0xf3, 0xf3, 0x82, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85,
	0xa4, 0xb8, 0x38, 0x1c, 0x93, 0x93, 0x4b, 0x8b, 0x12, 0x93, 0x2b, 0x25, 0x18, 0x15, 0x18, 0x35,
	0x98, 0x82, 0xe0, 0x7c, 0x90, 0x9c, 0x4b, 0x69, 0x11, 0x58, 0xbd, 0x04, 0x13, 0x44, 0x0e, 0xc6,
	0x17, 0x52, 0xe1, 0xe2, 0x75, 0xcb, 0x2f, 0x4f, 0x2c, 0x4a, 0x71, 0x4c, 0x49, 0x29, 0x4a, 0x2d,
	0x2e, 0x96, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x0c, 0x42, 0x15, 0x54, 0x32, 0xe5, 0x92, 0xc4, 0x66,
	0x77, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x04, 0x17, 0xbb, 0x6f, 0x6a, 0x71, 0x71, 0x62, 0x7a,
	0x2a, 0xd8, 0x66, 0xce, 0x20, 0x18, 0xd7, 0xa8, 0x9c, 0x0b, 0xe1, 0x7e, 0xa1, 0x2c, 0x2e, 0x49,
	0x98, 0xf6, 0x54, 0xb0, 0x88, 0x5b, 0x51, 0x7e, 0x2e, 0x54, 0xa5, 0x90, 0x8a, 0x1e, 0x5c, 0xa1,
	0x1e, 0x4e, 0x9b, 0xa4, 0x54, 0x09, 0xa8, 0x82, 0x84, 0x85, 0x12, 0x43, 0x12, 0x1b, 0x38, 0xf4,
	0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x67, 0x23, 0xb7, 0xf8, 0x4e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcSkillClient is the client API for GrpcSkill service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcSkillClient interface {
	DetermineSkillFromMessage(ctx context.Context, in *SkillDeterminationRequest, opts ...grpc.CallOption) (*SkillDeterminationResponse, error)
}

type grpcSkillClient struct {
	cc *grpc.ClientConn
}

func NewGrpcSkillClient(cc *grpc.ClientConn) GrpcSkillClient {
	return &grpcSkillClient{cc}
}

func (c *grpcSkillClient) DetermineSkillFromMessage(ctx context.Context, in *SkillDeterminationRequest, opts ...grpc.CallOption) (*SkillDeterminationResponse, error) {
	out := new(SkillDeterminationResponse)
	err := c.cc.Invoke(ctx, "/grpcSkill.grpcSkill/DetermineSkillFromMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcSkillServer is the server API for GrpcSkill service.
type GrpcSkillServer interface {
	DetermineSkillFromMessage(context.Context, *SkillDeterminationRequest) (*SkillDeterminationResponse, error)
}

// UnimplementedGrpcSkillServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcSkillServer struct {
}

func (*UnimplementedGrpcSkillServer) DetermineSkillFromMessage(ctx context.Context, req *SkillDeterminationRequest) (*SkillDeterminationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetermineSkillFromMessage not implemented")
}

func RegisterGrpcSkillServer(s *grpc.Server, srv GrpcSkillServer) {
	s.RegisterService(&_GrpcSkill_serviceDesc, srv)
}

func _GrpcSkill_DetermineSkillFromMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SkillDeterminationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcSkillServer).DetermineSkillFromMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcSkill.grpcSkill/DetermineSkillFromMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcSkillServer).DetermineSkillFromMessage(ctx, req.(*SkillDeterminationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcSkill_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcSkill.grpcSkill",
	HandlerType: (*GrpcSkillServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DetermineSkillFromMessage",
			Handler:    _GrpcSkill_DetermineSkillFromMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
