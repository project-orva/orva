// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package grpcScheduler

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Job struct {
	Frequency            int32    `protobuf:"varint,1,opt,name=Frequency,proto3" json:"Frequency,omitempty"`
	RunnerEndpoint       string   `protobuf:"bytes,2,opt,name=RunnerEndpoint,proto3" json:"RunnerEndpoint,omitempty"`
	Expires              int32    `protobuf:"varint,3,opt,name=Expires,proto3" json:"Expires,omitempty"`
	CreatedOn            int32    `protobuf:"varint,4,opt,name=CreatedOn,proto3" json:"CreatedOn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetFrequency() int32 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *Job) GetRunnerEndpoint() string {
	if m != nil {
		return m.RunnerEndpoint
	}
	return ""
}

func (m *Job) GetExpires() int32 {
	if m != nil {
		return m.Expires
	}
	return 0
}

func (m *Job) GetCreatedOn() int32 {
	if m != nil {
		return m.CreatedOn
	}
	return 0
}

type JobQuery struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobQuery) Reset()         { *m = JobQuery{} }
func (m *JobQuery) String() string { return proto.CompactTextString(m) }
func (*JobQuery) ProtoMessage()    {}
func (*JobQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *JobQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobQuery.Unmarshal(m, b)
}
func (m *JobQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobQuery.Marshal(b, m, deterministic)
}
func (m *JobQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobQuery.Merge(m, src)
}
func (m *JobQuery) XXX_Size() int {
	return xxx_messageInfo_JobQuery.Size(m)
}
func (m *JobQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_JobQuery.DiscardUnknown(m)
}

var xxx_messageInfo_JobQuery proto.InternalMessageInfo

func (m *JobQuery) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type JobQueryResponse struct {
	EstimatedCompletion  int32    `protobuf:"varint,1,opt,name=EstimatedCompletion,proto3" json:"EstimatedCompletion,omitempty"`
	LastCompleted        int32    `protobuf:"varint,2,opt,name=LastCompleted,proto3" json:"LastCompleted,omitempty"`
	LastRunDuration      int32    `protobuf:"varint,3,opt,name=LastRunDuration,proto3" json:"LastRunDuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobQueryResponse) Reset()         { *m = JobQueryResponse{} }
func (m *JobQueryResponse) String() string { return proto.CompactTextString(m) }
func (*JobQueryResponse) ProtoMessage()    {}
func (*JobQueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *JobQueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobQueryResponse.Unmarshal(m, b)
}
func (m *JobQueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobQueryResponse.Marshal(b, m, deterministic)
}
func (m *JobQueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobQueryResponse.Merge(m, src)
}
func (m *JobQueryResponse) XXX_Size() int {
	return xxx_messageInfo_JobQueryResponse.Size(m)
}
func (m *JobQueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JobQueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JobQueryResponse proto.InternalMessageInfo

func (m *JobQueryResponse) GetEstimatedCompletion() int32 {
	if m != nil {
		return m.EstimatedCompletion
	}
	return 0
}

func (m *JobQueryResponse) GetLastCompleted() int32 {
	if m != nil {
		return m.LastCompleted
	}
	return 0
}

func (m *JobQueryResponse) GetLastRunDuration() int32 {
	if m != nil {
		return m.LastRunDuration
	}
	return 0
}

type SuccessResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuccessResponse) Reset()         { *m = SuccessResponse{} }
func (m *SuccessResponse) String() string { return proto.CompactTextString(m) }
func (*SuccessResponse) ProtoMessage()    {}
func (*SuccessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *SuccessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuccessResponse.Unmarshal(m, b)
}
func (m *SuccessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuccessResponse.Marshal(b, m, deterministic)
}
func (m *SuccessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuccessResponse.Merge(m, src)
}
func (m *SuccessResponse) XXX_Size() int {
	return xxx_messageInfo_SuccessResponse.Size(m)
}
func (m *SuccessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SuccessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SuccessResponse proto.InternalMessageInfo

func (m *SuccessResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Job)(nil), "grpcScheduler.Job")
	proto.RegisterType((*JobQuery)(nil), "grpcScheduler.JobQuery")
	proto.RegisterType((*JobQueryResponse)(nil), "grpcScheduler.JobQueryResponse")
	proto.RegisterType((*SuccessResponse)(nil), "grpcScheduler.SuccessResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xdb, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0xdd, 0xd6, 0xda, 0xee, 0x40, 0x5b, 0x89, 0x17, 0x86, 0x22, 0x5a, 0x16, 0x91, 0x82,
	0x50, 0x44, 0x9f, 0x40, 0x7a, 0x80, 0x16, 0x41, 0x4c, 0x9f, 0xa0, 0x9b, 0x1d, 0x74, 0xa1, 0x4d,
	0xd2, 0x1c, 0xc4, 0x5e, 0xfb, 0x0a, 0x5e, 0xf9, 0xb4, 0x92, 0xf4, 0xc4, 0xae, 0x7a, 0x39, 0xdf,
	0xb0, 0xdf, 0xfe, 0xf3, 0x13, 0x68, 0x1a, 0xd4, 0xef, 0x39, 0xc7, 0xbe, 0xd2, 0xd2, 0x4a, 0xd2,
	0x7c, 0xd5, 0x8a, 0xcf, 0xf8, 0x1b, 0x66, 0x6e, 0x81, 0x3a, 0xf9, 0x8c, 0xa0, 0x3a, 0x95, 0x29,
	0xb9, 0x80, 0x78, 0xac, 0x71, 0xe5, 0x50, 0xf0, 0x35, 0x8d, 0xba, 0x51, 0xaf, 0xc6, 0x0e, 0x80,
	0xdc, 0x40, 0x8b, 0x39, 0x21, 0x50, 0x8f, 0x44, 0xa6, 0x64, 0x2e, 0x2c, 0xad, 0x74, 0xa3, 0x5e,
	0xcc, 0x4a, 0x94, 0x50, 0xa8, 0x8f, 0x3e, 0x54, 0xae, 0xd1, 0xd0, 0x6a, 0x70, 0xec, 0x46, 0xef,
	0x1f, 0x68, 0x9c, 0x5b, 0xcc, 0x9e, 0x05, 0x3d, 0xde, 0xf8, 0xf7, 0x20, 0xe9, 0x40, 0x63, 0x2a,
	0xd3, 0x17, 0x87, 0x7a, 0x4d, 0x5a, 0x50, 0x99, 0x0c, 0x43, 0x84, 0x98, 0x55, 0x26, 0xc3, 0xe4,
	0x2b, 0x82, 0xd3, 0xdd, 0x92, 0xa1, 0x51, 0x52, 0x18, 0x24, 0x77, 0x70, 0x36, 0x32, 0x36, 0x5f,
	0xfa, 0xef, 0x07, 0x72, 0xa9, 0x16, 0x68, 0x73, 0x29, 0xb6, 0xc1, 0xff, 0x5a, 0x91, 0x6b, 0x68,
	0x3e, 0xcd, 0x8d, 0xdd, 0x12, 0xcc, 0xc2, 0x05, 0x35, 0x56, 0x84, 0xa4, 0x07, 0x6d, 0x0f, 0x98,
	0x13, 0x43, 0xa7, 0xe7, 0xc1, 0xb9, 0x39, 0xa4, 0x8c, 0x93, 0x5b, 0x68, 0xcf, 0x1c, 0xe7, 0x68,
	0xcc, 0x3e, 0x14, 0x85, 0xfa, 0x16, 0x85, 0x20, 0x0d, 0xb6, 0x1b, 0xef, 0xbf, 0x23, 0x28, 0xf6,
	0x4e, 0x1e, 0x21, 0xe6, 0xe1, 0x7c, 0x5f, 0x3e, 0xe9, 0x17, 0x96, 0xfd, 0xa9, 0x4c, 0x3b, 0x97,
	0x25, 0x56, 0xfa, 0x59, 0x72, 0x44, 0xc6, 0xd0, 0x58, 0xf9, 0x52, 0xbc, 0xe1, 0xfc, 0xb7, 0x21,
	0x14, 0xd6, 0xb9, 0xfa, 0x67, 0x71, 0xf0, 0xa4, 0x27, 0xe1, 0x61, 0x3c, 0xfc, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x24, 0xf1, 0xb8, 0xaa, 0x29, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcSchedulerClient is the client API for GrpcScheduler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcSchedulerClient interface {
	CreateJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*SuccessResponse, error)
	QueryJob(ctx context.Context, in *JobQuery, opts ...grpc.CallOption) (*JobQueryResponse, error)
}

type grpcSchedulerClient struct {
	cc *grpc.ClientConn
}

func NewGrpcSchedulerClient(cc *grpc.ClientConn) GrpcSchedulerClient {
	return &grpcSchedulerClient{cc}
}

func (c *grpcSchedulerClient) CreateJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/grpcScheduler.grpcScheduler/createJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcSchedulerClient) QueryJob(ctx context.Context, in *JobQuery, opts ...grpc.CallOption) (*JobQueryResponse, error) {
	out := new(JobQueryResponse)
	err := c.cc.Invoke(ctx, "/grpcScheduler.grpcScheduler/queryJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcSchedulerServer is the server API for GrpcScheduler service.
type GrpcSchedulerServer interface {
	CreateJob(context.Context, *Job) (*SuccessResponse, error)
	QueryJob(context.Context, *JobQuery) (*JobQueryResponse, error)
}

// UnimplementedGrpcSchedulerServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcSchedulerServer struct {
}

func (*UnimplementedGrpcSchedulerServer) CreateJob(ctx context.Context, req *Job) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJob not implemented")
}
func (*UnimplementedGrpcSchedulerServer) QueryJob(ctx context.Context, req *JobQuery) (*JobQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryJob not implemented")
}

func RegisterGrpcSchedulerServer(s *grpc.Server, srv GrpcSchedulerServer) {
	s.RegisterService(&_GrpcScheduler_serviceDesc, srv)
}

func _GrpcScheduler_CreateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Job)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcSchedulerServer).CreateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcScheduler.grpcScheduler/CreateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcSchedulerServer).CreateJob(ctx, req.(*Job))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcScheduler_QueryJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcSchedulerServer).QueryJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcScheduler.grpcScheduler/QueryJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcSchedulerServer).QueryJob(ctx, req.(*JobQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcScheduler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcScheduler.grpcScheduler",
	HandlerType: (*GrpcSchedulerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createJob",
			Handler:    _GrpcScheduler_CreateJob_Handler,
		},
		{
			MethodName: "queryJob",
			Handler:    _GrpcScheduler_QueryJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
