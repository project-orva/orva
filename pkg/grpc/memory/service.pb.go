// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package grpcMemory

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MemorySet struct {
	DeviceID             string   `protobuf:"bytes,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	RequestMessage       string   `protobuf:"bytes,3,opt,name=RequestMessage,proto3" json:"RequestMessage,omitempty"`
	ResponseMessage      string   `protobuf:"bytes,4,opt,name=ResponseMessage,proto3" json:"ResponseMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemorySet) Reset()         { *m = MemorySet{} }
func (m *MemorySet) String() string { return proto.CompactTextString(m) }
func (*MemorySet) ProtoMessage()    {}
func (*MemorySet) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *MemorySet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemorySet.Unmarshal(m, b)
}
func (m *MemorySet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemorySet.Marshal(b, m, deterministic)
}
func (m *MemorySet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemorySet.Merge(m, src)
}
func (m *MemorySet) XXX_Size() int {
	return xxx_messageInfo_MemorySet.Size(m)
}
func (m *MemorySet) XXX_DiscardUnknown() {
	xxx_messageInfo_MemorySet.DiscardUnknown(m)
}

var xxx_messageInfo_MemorySet proto.InternalMessageInfo

func (m *MemorySet) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *MemorySet) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *MemorySet) GetRequestMessage() string {
	if m != nil {
		return m.RequestMessage
	}
	return ""
}

func (m *MemorySet) GetResponseMessage() string {
	if m != nil {
		return m.ResponseMessage
	}
	return ""
}

type MemoryRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemoryRequest) Reset()         { *m = MemoryRequest{} }
func (m *MemoryRequest) String() string { return proto.CompactTextString(m) }
func (*MemoryRequest) ProtoMessage()    {}
func (*MemoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *MemoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemoryRequest.Unmarshal(m, b)
}
func (m *MemoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemoryRequest.Marshal(b, m, deterministic)
}
func (m *MemoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemoryRequest.Merge(m, src)
}
func (m *MemoryRequest) XXX_Size() int {
	return xxx_messageInfo_MemoryRequest.Size(m)
}
func (m *MemoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MemoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MemoryRequest proto.InternalMessageInfo

func (m *MemoryRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func init() {
	proto.RegisterType((*MemorySet)(nil), "grpcMemory.MemorySet")
	proto.RegisterType((*MemoryRequest)(nil), "grpcMemory.MemoryRequest")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4a, 0x2f, 0x2a, 0x48, 0xf6,
	0x4d, 0xcd, 0xcd, 0x2f, 0xaa, 0x54, 0x9a, 0xc8, 0xc8, 0xc5, 0x09, 0x61, 0x06, 0xa7, 0x96, 0x08,
	0x49, 0x71, 0x71, 0xb8, 0xa4, 0x82, 0x54, 0x7a, 0xba, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06,
	0xc1, 0xf9, 0x42, 0x62, 0x5c, 0x6c, 0xa1, 0xc5, 0xa9, 0x45, 0x9e, 0x2e, 0x12, 0x4c, 0x60, 0x19,
	0x28, 0x4f, 0x48, 0x8d, 0x8b, 0x2f, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0xc4, 0x37, 0xb5, 0xb8,
	0x38, 0x31, 0x3d, 0x55, 0x82, 0x19, 0x2c, 0x8f, 0x26, 0x2a, 0xa4, 0xc1, 0xc5, 0x1f, 0x94, 0x5a,
	0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x0a, 0x53, 0xc8, 0x02, 0x56, 0x88, 0x2e, 0xac, 0x24, 0xcf, 0xc5,
	0x0b, 0x71, 0x12, 0xd4, 0x04, 0x21, 0x3e, 0x2e, 0x26, 0xb8, 0x83, 0x98, 0x3c, 0x5d, 0x8c, 0x9e,
	0x30, 0x72, 0x21, 0xf9, 0x41, 0xc8, 0x9d, 0x4b, 0x30, 0x3d, 0xb5, 0xc4, 0x27, 0xb1, 0x24, 0xb5,
	0xb8, 0xc4, 0xad, 0x28, 0x3f, 0x17, 0xe4, 0x30, 0x21, 0x49, 0x3d, 0x84, 0x0a, 0x3d, 0x14, 0xe3,
	0xa4, 0x44, 0x31, 0xa5, 0x82, 0x53, 0x4b, 0x94, 0x18, 0x84, 0x3c, 0xb9, 0x84, 0x51, 0x0c, 0x82,
	0xf8, 0x9d, 0x2c, 0xa3, 0x9c, 0xb8, 0x78, 0x92, 0x8b, 0x52, 0x13, 0x4b, 0x52, 0xa1, 0x6e, 0xc4,
	0xae, 0x50, 0x0a, 0xb7, 0xd1, 0x4a, 0x0c, 0x49, 0x6c, 0xe0, 0xe8, 0x32, 0x06, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x74, 0xb2, 0x04, 0xb9, 0xbf, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcMemoryClient is the client API for GrpcMemory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcMemoryClient interface {
	GetLatestFromUser(ctx context.Context, in *MemoryRequest, opts ...grpc.CallOption) (*MemorySet, error)
	GetLatestFromDevice(ctx context.Context, in *MemoryRequest, opts ...grpc.CallOption) (*MemorySet, error)
	CreateMemory(ctx context.Context, in *MemorySet, opts ...grpc.CallOption) (*MemoryRequest, error)
}

type grpcMemoryClient struct {
	cc *grpc.ClientConn
}

func NewGrpcMemoryClient(cc *grpc.ClientConn) GrpcMemoryClient {
	return &grpcMemoryClient{cc}
}

func (c *grpcMemoryClient) GetLatestFromUser(ctx context.Context, in *MemoryRequest, opts ...grpc.CallOption) (*MemorySet, error) {
	out := new(MemorySet)
	err := c.cc.Invoke(ctx, "/grpcMemory.grpcMemory/getLatestFromUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcMemoryClient) GetLatestFromDevice(ctx context.Context, in *MemoryRequest, opts ...grpc.CallOption) (*MemorySet, error) {
	out := new(MemorySet)
	err := c.cc.Invoke(ctx, "/grpcMemory.grpcMemory/getLatestFromDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcMemoryClient) CreateMemory(ctx context.Context, in *MemorySet, opts ...grpc.CallOption) (*MemoryRequest, error) {
	out := new(MemoryRequest)
	err := c.cc.Invoke(ctx, "/grpcMemory.grpcMemory/createMemory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcMemoryServer is the server API for GrpcMemory service.
type GrpcMemoryServer interface {
	GetLatestFromUser(context.Context, *MemoryRequest) (*MemorySet, error)
	GetLatestFromDevice(context.Context, *MemoryRequest) (*MemorySet, error)
	CreateMemory(context.Context, *MemorySet) (*MemoryRequest, error)
}

// UnimplementedGrpcMemoryServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcMemoryServer struct {
}

func (*UnimplementedGrpcMemoryServer) GetLatestFromUser(ctx context.Context, req *MemoryRequest) (*MemorySet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLatestFromUser not implemented")
}
func (*UnimplementedGrpcMemoryServer) GetLatestFromDevice(ctx context.Context, req *MemoryRequest) (*MemorySet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLatestFromDevice not implemented")
}
func (*UnimplementedGrpcMemoryServer) CreateMemory(ctx context.Context, req *MemorySet) (*MemoryRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMemory not implemented")
}

func RegisterGrpcMemoryServer(s *grpc.Server, srv GrpcMemoryServer) {
	s.RegisterService(&_GrpcMemory_serviceDesc, srv)
}

func _GrpcMemory_GetLatestFromUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcMemoryServer).GetLatestFromUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcMemory.grpcMemory/GetLatestFromUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcMemoryServer).GetLatestFromUser(ctx, req.(*MemoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcMemory_GetLatestFromDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcMemoryServer).GetLatestFromDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcMemory.grpcMemory/GetLatestFromDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcMemoryServer).GetLatestFromDevice(ctx, req.(*MemoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcMemory_CreateMemory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemorySet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcMemoryServer).CreateMemory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcMemory.grpcMemory/CreateMemory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcMemoryServer).CreateMemory(ctx, req.(*MemorySet))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcMemory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcMemory.grpcMemory",
	HandlerType: (*GrpcMemoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getLatestFromUser",
			Handler:    _GrpcMemory_GetLatestFromUser_Handler,
		},
		{
			MethodName: "getLatestFromDevice",
			Handler:    _GrpcMemory_GetLatestFromDevice_Handler,
		},
		{
			MethodName: "createMemory",
			Handler:    _GrpcMemory_CreateMemory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
